<!DOCTYPE html>
<html>
<head>
		<%- include('dd-rum.ejs'); %>	
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<title>NestrisChamps: user settings</title>
		<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">

		<script src="https://code.highcharts.com/highcharts.js"></script>
		<script src="https://code.highcharts.com/modules/series-label.js"></script>
		<script src="https://code.highcharts.com/modules/exporting.js"></script>
		<script src="https://code.highcharts.com/modules/export-data.js"></script>
		<script src="https://code.highcharts.com/modules/accessibility.js"></script>
		
		<style>
			.navbar-item img {
				max-height: 2.5rem;
			}

			.highcharts-figure,
			.highcharts-data-table table {
				min-width: 310px;
				margin: 1em auto;
			}

			.highcharts-data-table table {
				font-family: Verdana, sans-serif;
				border-collapse: collapse;
				border: 1px solid #ebebeb;
				margin: 10px auto;
				text-align: center;
				width: 100%;
			}

			.highcharts-data-table caption {
				padding: 1em 0;
				font-size: 1.2em;
				color: #555;
			}

			.highcharts-data-table th {
				font-weight: 600;
				padding: 0.5em;
			}

			.highcharts-data-table td,
			.highcharts-data-table th,
			.highcharts-data-table caption {
				padding: 0.5em;
			}

			.highcharts-data-table thead tr,
			.highcharts-data-table tr:nth-child(even) {
				background: #f8f8f8;
			}

			.highcharts-data-table tr:hover {
				background: #f1f7ff;
			}
		</style>
</head>
<body>

<%- include('header'); %>

<section class="section">
	<div class="container content">
		<h1 class="title is-1">Progress <span class="title is-5"><%= filter.current %></span></h1>
		<p class="is-size-7">
			<% filter.links.forEach((a, idx) => { %>
				<% if (idx > 0) { %> - <% } %>
				<a href="<%= a.href %>" class="filter"><%= a.text %></a>
			<% }) %>
		</p>
		<figure class="highcharts-figure">
			<div id="container_overall"></div>
			<div id="container_18"></div>
			<div id="container_19"></div>
			<div id="container_29"></div>
		</figure>
	</div>
</section>

<script>
document.querySelectorAll('a.filter').forEach(a => {
	const m = (a.href || '').match(/#competition=(0|1)/);
	const qs = m ? `?competition=${m[1]}` : '';
	a.href = `${document.location.pathname}${qs}`;
});

(async function showChart() {
	const response = await fetch(`/stats/progress/data${document.location.search}`)
	const progress = await response.json()
	const response1819 = await fetch(`/stats/progress/data-1819${document.location.search}`)
	const progress1819 = await response1819.json()

	Highcharts.chart('container_overall', {
		chart: {
			zoomType: 'x',
		},
		title: {
			text: 'Games per session'
		},
		xAxis: {
			type: 'datetime',
			title: {
				text: 'Date'
			}
		},
		yAxis: [{
			title: {
				text: 'Score'
			},
			min: 0
		},{
			title: {
				text: 'Number of games'
			},
			min: 0,
			opposite: true
		}],
		tooltip: {
			shared: true
		},

		plotOptions: {
			series: {
				marker: {
					enabled: true
				}
			}
		},

		colors: ['#6CF', '#333', '#4A32FF', '#F69B00'],

		series: [{
			name: "Num games",
			type: 'column',
			yAxis: 1,
			data: progress.map(({timestamp, num_games}) => [timestamp, parseInt(num_games, 10)])
		},{
			name: "Max score (overall)",
			type: 'spline',
			data: progress.map(({timestamp, max_score}) => [timestamp, max_score])
		},{
			name: "18 start",
			type: 'spline',
			data: progress1819[18].map(({timestamp, max_score}) => [timestamp, max_score])
		},{
			name: "19 start",
			type: 'spline',
			data: progress1819[19].map(({timestamp, max_score}) => [timestamp, max_score])
		}],

		responsive: {
			rules: [{
				condition: {
					maxWidth: 500
				},
				chartOptions: {
					plotOptions: {
						series: {
							marker: {
								radius: 2.5
							}
						}
					}
				}
			}]
		}
	});

	[
		[18, '#4A32FF'],
		[19, '#F69B00'],
		[29, '#66001A'],
	]
	.forEach(([level, color]) => {

		if (progress1819[level].length <= 0) return;

		Highcharts.chart(`container_${level}`, {
			chart: {
				zoomType: 'x',
			},
			title: {
				text: `${level}-start progress`
			},
			xAxis: {
				type: 'datetime',
				title: {
					text: 'Date'
				}
			},
			yAxis: [{
				title: {
					text: 'Score'
				},
				min: 0
			},{
				title: {
					text: 'Number of games'
				},
				min: 0,
				opposite: true
			}],
			tooltip: {
				shared: true
			},

			plotOptions: {
				series: {
					marker: {
						enabled: true
					}
				}
			},

			colors: ['#6CF', color, '#007200'],

			series: [{
				name: `Num games`,
				type: 'column',
				yAxis: 1,
				data: progress1819[level].map(({timestamp, num_games}) => [timestamp, parseInt(num_games, 10)])
			},{
				name: `Max score`,
				type: 'spline',
				data: progress1819[level].map(({timestamp, max_score}) => [timestamp, max_score])
			},{
				name: `Average score`,
				type: 'spline',
				data: progress1819[level].map(({timestamp, avg_score}) => [timestamp, parseInt(avg_score, 10)])
			}],

			responsive: {
				rules: [{
					condition: {
						maxWidth: 500
					},
					chartOptions: {
						plotOptions: {
							series: {
								marker: {
									radius: 2.5
								}
							}
						}
					}
				}]
			}
		});
	});

})();
</script>

</body>
</html>
