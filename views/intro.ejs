<!DOCTYPE html>
<html>
<head>
	<%- include('dd-rum.ejs'); %>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">

	<title>NestrisChamps: Capture your NES Classic Tetris gameplay</title>
	<meta name="description" content="NestrisChamps: capture NES Classic Tetris data and see awesome stats. Record all your games. See your progression. Play with friends and organise tournaments!" />

	<meta property="og:url" content="https://nestrischamps.io/" />
	<meta property="og:type" content="website" />
	<meta property="og:image" content="https://nestrischamps.io/views/1p/das_trainer.jpg" />
	<meta property="og:title" content="NestrisChamps: Capture your NES Classic Tetris gameplay" />
	<meta property="og:description" content="NestrisChamps: capture NES Classic Tetris data and see awesome stats. Record all your games. See your progressions. Play with friends and organise tournaments!" />

	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">
	<style>
		.navbar-item img {
			max-height: 2.5rem;
		}
		.logo img {
			display: block;
		}
	</style>
	<script>
		function load_iframe(selector, url, [width, height] = [1280, 720]) {
			const holder = document.querySelector(selector);
			holder.innerHTML = '';

			const styles = getComputedStyle(holder);

			const iframe = document.createElement('iframe');
			iframe.src = `https://nestrischamps.io${url}`;
			iframe.width = width;
			iframe.height = height;

			const scale = parseInt(styles.width) / width;

			if (scale < 1) {
				iframe.style.transformOrigin = `0 0`;
				iframe.style.transform = `scale(${scale})`;
				holder.style.height = `${height * scale}px`; // should not be needed, but bug in chrome :'(
			}

			holder.appendChild(iframe);
		}
	</script>
</head>
<body>

<%- include('header'); %>

<section class="section">
	<div class="container">
		<div class="columns">
			<div class="column is-one-quarter logo">
				<img title="NestrisChamps logo podium" src="/brand/logo.podium.6x.png" />
			</div>
			<div class="column is-three-quarters content">
				<h1 class="title is-1">
					Capture your NES Classic Tetris gameplay
				</h1>
				<p><strong>NestrisChamps</strong> is an online suite of tools to capture and track your <a href="https://en.wikipedia.org/wiki/Tetris_(NES_video_game)">NES Classic Tetris</a> gameplay. It supports capturing from emulators as well as from the raw video feed from your NES.</p>
				<p>"Capturing" means reading the video frames, and extracting game information from them, such as score, lines, level, blocks in board, and piece stats.</p>
				<p>With game data captured, a world of possibilities opens up:</p>
				<ul>
					<li>Re-draw game data in custom layouts with pixel perfect crispness</li>
					<li>Compute statistics from the gameplay (Tetris Rate, Efficiency, Droughts)</li>
					<li>Record scores and game files in a database</li>
					<li>Pit multiple players against each other in competition layouts with stat differentials</li>
				</ul>
			</div>
	</div>
	</div>
</section>

<section class="section">
	<div class="container content">
		<h1 class="title is-1" id="getting_started">
			Getting started: 1-2 Go!
		</h1>
		<p>NestrisChamps is a 2-steps system.</p>
		<ol>
			<li>Calibrate capture</li>
			<li>Render</li>
		</ol>
		<p>Once calibration is done, streaming with NestrisChamps is easy as pie! You just need to add <strong>ONE</strong> <a href="https://plsoid.medium.com/how-to-add-browser-source-in-obs-streamlabs-obs-twitch-studio-xsplit-50a698080497">Browser Source component</a> to <a hre="https://obsproject.com/">OBS</a> / <a href="https://streamlabs.com/">SLOBS</a>, to have the captured gameplay re-rendered, and you are ready to stream right away!</p>
		<p>There's no manual cutting of the source video stream to do, everything is ready in just a few clicks.</p>
		<p>So, to get started, the first you need to do is to calibrate.</p>
		<p><strong>Before</strong> You do that however, it is strongly recommended that, you spend time on these 2 resources.</p>
		<ul>
			<li><a href="https://nestrischamps.gitbook.io/docs/streaming/ocr-and-calibration">Calibration documentation</a></li>
			<li><a href="https://www.youtube.com/watch?v=HJIqU38LqoE">Calibration tutorial on youtube</a></li>
		</ul>
		<p>Once you've read the doc, go and <a href="/room/producer">calibrate your capture here</a>.</p>
		<p>And once you've calibrated, pick a renderer for your Browser Source in the <a href="/renderers">renderers page</a>.</p>
	</div>
</section>

<section class="section">
	<div class="container content">
		<h1 class="title is-1" id="stats">
			Stats! So many stats!
		</h1>
		<p>The NES has very little real-estate, which severely limits the space available for stats beside gameplay itself. Once game data is acquired in NestrisChamps however, it can be renderered in a large HD canvas, offering much more space for stats. In NestrisChamps, all layouts are provided to run in 720p resolution (1280x720), but custom renderers could be made in 1080p resolution or even (gasp!) 4K!</p>
		<div class="columns">
			<div class="column is-half">
				<img title="Classic Layout" src="/views/1p/classic.jpg" />
				<p>Classic layout</p>
			</div>
			<div class="column is-half">
				<img title="Das Trainer Layout" src="/views/1p/das_trainer.jpg" />
				<p>Das trainer layout (capturing the <a href="https://www.romhacking.net/hacks/3761/">Das Trainer rom</a>)</p>
			</div>
		</div>
	</div>
</section>

<section class="section">
	<div class="container content">
		<h1 class="title is-1" id="recordings_n_replays">
			Recording and Replays
		</h1>
		<p>Once you have calibrated NestrisChamps, and you play while capturing is on, all your games will be captured in NestrisChamps' database. The layouts themselves may show a small portion of your high scores and personal best scores (PBs), but <strong>all</strong> your scores and games are available for your review at your <a href="/stats/scores">personal scores page</a>.</p>
		<p>Games can be replayed in layouts others than the one they were captured in. And any 2 games can be pitted against each other in competition layouts.</p>
		<p>Replays can be sped up too (because who has the time to watch replay in real time?!). To speed up a replay, use the query string <pre>?speed=X</pre> where X represents the speed-up factor.</p>
		<div class="columns">
			<div class="column is-half">
				<img title=""src="/images/scores.png" />
			</div>
			<div class="column is-half">
				<div class="buttons">
					<button class="button is-info is-light is-outlined" onclick="load_iframe('#replay', '/replay/das_trainer/11020?speed=4')">Start a game replay</button>
					<button class="button is-info is-light is-outlined" onclick="load_iframe('#replay', '/replay/ctwc/24619-24623?bg=2&speed=4')">Start a match replay</button>
					<button class="button is-info is-light is-outlined" onclick="load_iframe('#replay', '/replay/compact2to4/24619-24623-11020?bg=2&players=3&speed=4')">Start a 3-way replay</button>
				</div>
				<div id="replay"></div>
			</div>
		</div>
	</div>
</section>

<section class="section">
	<div class="container content">
		<h1 class="title is-1" id="layouts">
			Layouts
		</h1>
		<p>With data, the sky is the limit when it comes to redrawing gameplay. NestrisChamps comes with a variety of pre-build renderers. Additionally, it is easy to make your own layouts! Either for your personal use, or to add to NestrisChamps for everyone's benefit. Below are some examples.</p>
		<p><strong>Stencil layouts - extra info and warning</strong>: The stencil layouts are aligned to CTM Stencil for gameplay. A player may use NestrisChamps to record their games and produce crisp video output, while being compatible with restreamers' setups to compete against other players. NestrisChamps however does not render non-gameplay screens (menu screen, level selection, and score board). Because of that, you should <strong>always check</strong> with your restreamer game host, or competition organizers, if they are OK with using the NestrisChamps Stencil layouts for qualification, and for the competitions themselves. Competition organizers may have requirements to enter auth codes in the score board to ensure real-time authenticity. NestrisChamps does not support this at the moment.</p>
		<div class="columns">
			<div class="column is-half">
				<h4 class="subtitle is-4">Stencil layout (compatible with CTM Stencil!)</h4>
				<img title="Stencil layout" src="/views/1p/stencil.jpg" />
			</div>
			<div class="column is-half">
				<h4 class="subtitle is-4">Stencil Plus</h4>
				<img title="Stencil Plus layout" src="/views/1p/stencilplus.jpg" />
			</div>
		</div>
		<div class="columns">
			<div class="column is-half">
				<h4 class="subtitle is-4">Simple 1p</h4>
				<img title="Simple 1p layout" src="/views/1p/simple_1p.jpg" />
			</div>
			<div class="column is-half">
				<h4 class="subtitle is-4">Tomello Soulman</h4>
				<img title="Tomello Soulman layout" src="/views/1p/tomellosoulman.jpg" />
			</div>
		</div>
		<div class="columns">
			<div class="column is-half">
				<h4 class="subtitle is-4">Champions</h4>
				<img title="Champions layout" src="/views/1p/champions.1.jpg" />
			</div>
			<div class="column is-half">
				<h4 class="subtitle is-4">Plain Text</h4>
				<img title="Plain text layout" src="/views/1p/plaintext.jpg" />
			</div>
		</div>
	</div>
</section>

<section class="section">
	<div class="container content">
		<h1 class="title is-1" id="game_hosting_n_tournaments">
			Game Hosting and Tournaments
		</h1>
		<p>While you can use NestrisChamps purely to capture and stream your own gameplay, one great thing about NestrisChamps is that you can connect your game stream to someone else's renderer, who acts as a game host. And of course, you can be a game host yourself!</p>
		<p>Game hosting with NestrisChamps is incredibly easy!</p>
		<ol>
			<li>Set a browser source in OBS to one of NestrisChamps competition layouts, that you can find in the <a href="/renderers"> renderers page</a></li>
			<li>Control which player should be shown in the layout from the <a href="/room/admin">admin page</a></li>
			<li>Commentate on games, and let your commentating flavour earn you fame and glory!</li>
		</ol>
		<p>There are a variety of competition layouts to chose from, with some examples below.</p>
		<div class="columns">
			<div class="column is-half">
				<h4 class="subtitle is-4">CTM</h4>
				<img title="CTM layout" src="/views/mp/ctm.jpg" />
			</div>
			<div class="column is-half">
				<h4 class="subtitle is-4">Garage 2</h4>
				<img title="Garage 2 layout" src="/views/mp/garage2.jpg" />
			</div>
		</div>
		<div class="columns">
			<div class="column is-half">
				<h4 class="subtitle is-4">CTJC</h4>
				<img title="Champions layout" src="/views/mp/ctjc.jpg" />
			</div>
			<div class="column is-half">
				<h4 class="subtitle is-4">Compact 2 to 4</h4>
				<img title="Compact 2 to 4 layout" src="/views/mp/compact2to4.1.jpg" />
			</div>
		</div>
	</div>
</section>

<section class="section">
	<div class="container content">
		<h1 class="title is-1" id="features_n_tools">
			Features and Tools
		</h1>
		<div class="columns">
			<div class="column is-half">
				<h2 class="title is-2" id="native_webcam_support">Native webcam support</h2>
				<p>In layouts that support it, webcam is automatically captured from the game capture page, and shown in the layout at the correct location and dimensions. This has several advantages:<p>
				<ul>
					<li>Webcam feed is send directly from the capture page to the renderer for very low latency rendering! This is unlike capture from player's twitch stream, where Twitch broadcasting adds a few seconds of delay (sometimes many seconds!).</li>
					<li>Game hosting is even simpler: a game host doesn't have to worry about getting player cam via other means (e.g. capturing and cutting from player stream, or using other tools like discord video calls, or <a href="https://obs.ninja/">OBS.ninja</a>)</li>
					<li>Layouts can have multiple modes and handle the player cams with no interraction from the game host. For example, the layout CTM-2-Matches can automatically switch between a 2-match view or single-match view and webcams feed are automatically taken care of.</li>
				</ul>
			</div>
			<div class="column is-half">
				<h2 class="title is-2" id="twitch_chat_integration">Twitch Chat Integration</h2>
				<p>For layouts that support it, Twitch chats is automatically renderered into the layout.</p>
				<p>Additionally, the capture page can be loaded with a query string <pre>?tts=1</pre> to activate Text-To-Speech, and chat messages will be read to the player, with one random voice assigned to each participant of the chat.</p>
			</div>
		</div>
		<div class="columns">
			<div class="column is-half">
				<h2 class="title is-2" id="invisible_tetris">Invisible Tetris Renderer</h2>
				<p>Classic Tetris expert players can play in an invisible mode with the following <a href="https://en.wikipedia.org/wiki/Game_Genie#NES">Game Genie</a> code.</p>
				<pre>OXYOUO
VNIPZN
VNTPYN</pre>
				<p>It is hard enough for expert players themselves to track the invisible field, and it is practically impossible for stream viewers to follow. NestrisChamps comes to the rescue here with a Invisible Tetris renderer! While the player plays invisible Tetris and must keep track of the board in their head. The audience to the stream get to see the "phantom" pieces in the board directly.</p>
				<img title="Invisible Tetris layout" src="/views/1p/invisible_tetris.jpg" />
			</div>
			<div class="column is-half">
				<h2 class="title is-2" id="counting_past_maxout">Counting score past maxout</h2>
				<div>
					<p>NES Tetris stops counting score at 999,999. With a custom Game Genie code, it is possible to count past this (up to 1,600,000) with using a hexadecimal character as first letter (e.g. A is 1 million, B is 1.1 million, C, is 1.2 million, etc)</p>
					<p>Folks do not necessarily have a Game Genie though. Well, NestrisChamps to the rescue for this case too! By inspecting the line clears in the game, NestrisChamps is able to add up score beyond maxout, and display it in the layouts.</p>
					<p>As a bonus, levels in NES classic Tetris are not displayed correctly beyond level 30. NestrisChamps corrects the levels based on line clears!</p>
				</div>
			</div>
		</div>
		<div class="columns">
			<div class="column is-half">
				<h2 class="title is-2" id="qualifier_renderer">Qualifier renderer</h2>
				<div>
					<p>Many online events have a qualifier format, where players must qualify to determine in which bracket they will play.</p>
					<p>Most qualifiers have the same sort of requirements: stream for a specific amount of time, track your qual score, as either the highest score you can achieve during your qual session, or average of top 2, or top 3.</p>
					<p>NestrisChamps offers a qualifier layout. The layout is CTM-stencil-based, includes a built-in timer, and computes the qual score as the average of top X (3 by default). Native webcam is active in this layout, so players can show their webcam capture works, if that is a requirement of the tournament they are joining.</p>
					<p>The layout tracks scores from the moment it is loaded, and the timer starts as soon as the layout loads.</p>
					<p>The qualifier layout can be tuned with the following parameters, which can be added to the query string.</p>
					<dl>
						<dt><strong>minutes=X</strong></dt>
						<dd>where X is the qualifier time (default to 120 minutes, i.e. 2 hours)</d>
						<dt><strong>average_of=Y</strong></dt>
						<dd>where Y can be one of 1, 2, or 3 (defaults to 3)</d>
					</dl>
					<pre>?minutes=60&average_of=2</pre>
					<img title="Qualifier layout layout" src="/views/1p/stencil_ctwc_sing_21.jpg" />
				</div>
			</div>
			<div class="column is-half">
				<h2 class="title is-2" id="backgrounds">Backgrounds</h2>
				<p>Many of the layouts in NestrisChamps come with changeable backgrounds. It's of course possible to request <string>NO</string> background too, so a user may set whichever custom background they want in OBS. Still, there are some built-in backgrounds you can consider using.</p>
				<p>Select a background by adding the following query string to the layout URL</p>
				<pre>?bg=NUM</pre>
				<p>where <strong>NUM</strong> is a number, as follows:</p>
				<ol start="0" type="1">
					<li>(no background)</li>
					<li>Black background with randomly positioned tetris tiles<br />
						<img title="Tiles background" src="/docs/backgrounds/tiles.jpg" /></li>
					<li>Green NestrisChamps animated background<br />
						<img title="Green background" src="/docs/backgrounds/nestrischamps_green.jpg" />
					<li>Rainbow NestrisChamps animated background<br />
						<img title="Raibow background" src="/docs/backgrounds/nestrischamps_rainbow.jpg" />
				<ol>
			</div>
		</div>
		<div class="columns">
			<div class="column is-half">
				<h2 class="title is-2" id="timer">Timer Tool</h2>
				<div>
					<p>Some competitions might not allow NestrisChamps for qualifiers. For those, it is typically expected that players will stream their qualification run while being stencil-ready, and include some custom timer in their OBS stream.</p>
					<p>It is surprisingly annoying to find a very light timer to use. Most players resort to finding a timer on the internet, and capture it with window capture in OBS. That is <em>waaayyy</em> heavier than it needs to be.</p>
					<p>NestrisChamps provides a very simple timer that can be used in your OBS layout. Simply create a new Browser Source with canvas size 268x44 (you can scale its size in OBS later), and load the URL: <a href="https://nestrischamps.io/tools/timer/">https://nestrischamps.herokuapp.com/tools/timer/</a>.</p>
					<p id="timer_demo"><button class="button is-info is-light is-outlined" onclick="load_iframe('#timer_demo', '/tools/timer/', [268, 44])">Start the timer</button></p>
					<p>The timer can be customized with the following parameters:</p>
					<dl>
						<dt><strong>minutes=X</strong></dt>
						<dd>where X is a integer representing the duration in minutes of the timer (defaults to 120, i.e. 2 hours)</dd>
						<dt><strong>type=Y</strong></dt>
						<dd>where Y can be one of 'up' or 'down' to indicate whether this is a count-up or count-down timer.</dd>
						<dt><strong>text_color=H</strong></dt>
						<dd>where H is the <a href="https://en.wikipedia.org/wiki/Web_colors#Hex_triplet">hex representation of a color</a> for the text (defaults to black)</dd>
						<dt><strong>bg_color=H</strong></dt>
						<dd>where H is the <a href="https://en.wikipedia.org/wiki/Web_colors#Hex_triplet">hex representation of a color</a> for the background (defaults to white)</dd>
					</dl>
					<pre>?minutes=60&type=down&text_color=ffffff&bg_color=000000</pre>
					<p>Source code and documentation for the timer is available <a href="https://github.com/timotheeg/nestrischamps/tree/main/public/tools/timer">here</a></p>
				</div>
			</div>
			<div class="column is-half">
				<h2 class="title is-2" id="ctwc_footer">CTWC Footer Tool</h2>
				<div>
					<p>When running an official CTWC event, most tournaments use a common footer that cycles between multiple "slides" of information (e.g. event name, facebook page, etc.)</p>
					<p>NestrisChamps makes available a simple footer that can be easily loaded in OBS. The footer has size 1280x32, and can thus be easily added as a standalone browser source, above many of the competition layouts, which specificaly leave a 32px strip at the bottom.</p>
					<p id="ncfooter"><button class="button is-info is-light is-outlined" onclick="load_iframe('#ncfooter', '/tools/footer/', [1280, 32])">Run the footer</button></p>
					<p>The footer can be customized with the following parameters:</p>
					<dl>
						<dt><strong>event=X</strong></dt>
						<dd>where X is the name of the event (defaults to "SINGAPORE CHAMPIONSHIP 2021")</dd>
						<dt><strong>cycle_seconds=Y</strong></dt>
						<dd>where Y is an integer representing how many seconds each slide should stay before cycling (defaults to 10).</dd>
						<dt><strong>system=Z</strong></dt>
						<dd>Indicates whether this is a PAL or NTSC event (defaults to NTSC)</dd>
					</dl>
					<pre>?cycle_seconds=15&event=Marq's%20garage%20party</pre>
					<p>Source code and documentation for the footer is available <a href="https://github.com/timotheeg/nestrischamps/tree/main/public/tools/footer">here</a></p>
				</div>
			</div>
		</div>
		<div class="columns">
			<div class="column is-half">
				<h2 class="title is-2" id="native_emulator_support">
					Native emulator support
				</h2>
				<p>Capture is the most critical part of NestrisChamps. Without good data in, NestrisChamps can't compute stats from gameplay accurately.</p>
				<p>While we can't do without frame capture for a video feed from a NES, frame capture is unecessary in an emulator! Indeed game data can be read from the game itself and sent to NestrisChamps' server! This exactly what <a href="https://github.com/Stabyourself">Maurice</a> did when he created the <a href="https://github.com/Stabyourself/nestrischamps-emulator-connector">NestrisChamps emulator connector</a>!</p>
				<p>If you play NES Tetris in one of <a href="http://fceux.com/">FCEUX</a>, <a href="https://www.mesen.ca/">Mesen</a>, or <a href="http://tasvideos.org/BizHawk.html">BizHawk</a> (basically emulators with support for lua scripting), then you can easily use the NestrisChamps Emulator Connector.</p>
				<p>Because the connector runs straight in the emulator, features from the "normal" NestrisChamps capture page are obviously not available (e.g. native webcam sharing, and Twitch chat Text-To-Speech).</p>
			</div>
			<div class="column is-half">
				<h2 class="title is-2" id="free_and_open_source">
					Free and Open Source!
				</h2>
				<p>NestrisChamps is Open Source Software, licenced under the MIT licence and <a href="https://github.com/timotheeg/nestrischamps">available on github</a>.</p>
				<p>That means you can run your own version of NestrisChamps locally if you wish, and have your own database.</p>
				<p>The online version of NestrisChamps is owned and operated by yobi9 (Find him on <a href="https://discord.gg/Wzr4YdQWa4">discord</a>, <a href="https://www.twitch.tv/yobi9">twitch</a>, <a href="https://github.com/timotheeg">github</a>).</p>
			</div>
		</div>
	</div>
</section>

<section class="section">
	<div class="container content">
		<h1 class="title is-1" id="philosophy">
			NestrisChamps' Philosophy
		</h1>
		<p>NestrisChamps sometimes gets feedback that it's hard to use. Calibration is not auto-magically good. The auto calibration is working in most cases, but fine-tuning should <strong>always</strong> be performed. This section explains the philosophy of NestrisChamps.</p>
		<h2>NestrisChamps for individuals</h2>
		<p>NestrisChamps first and foremost is meant for individual players. There's nothing to install locally to use NestrisChamps, and while the complexity of setup is a little high initially, it is a one time affair. NestrisChamps aims to provide features valuable for individual players.</p>
		<ul>
			<li>Details stats are tracked per game so if a game "feels" odd, you can check what happened. Maybe there were multiple droughts going on at the same time for example.</li>
			<li>The renderers are sharpeners of sorts, allowing you to stream in crisp HD glory.</li>
			<li>All your scores and stats are tracked. You can see your progress over time.</li>
			<li>You can replay and share your games, and ask <a href="https://github.com/GregoryCannon/StackRabbit">StackRabbit AI</a> for placement advice when you review your games.</li>
			<li>You can make your own renderers to use whatever branding you want.</li>
		</ul>

		<h2>NestrisChamps for restreamers</h2>
		<h3>Classic Restreaming</h3>
		<p>Classic restreaming is the way matches are typically restreamed now. Restreaming is done based on video streams. Players must stream as video, restreamers capture the video streams, slice them up and restream them by moving bits around in a coherent side by side view.</p>
		<p>With video based restreaming, there is a low setup complexity for individual players. The only requirement is for them to stream aligned to stencil. There is however rather a lot of complexity for the game host's restreaming setup.</p>
		<p>The Game host must slice, cut, and shift portions of the player streams, to assemble the side-by-side view. All items need to be perfectly aligned by hand. And because player's stencil alignment is not always perfect, there can be some visible mis-alignments in the result, even if the restreamer's sliced zones are themselves perfectly positionned.</p>
		<p>Beyond the setup complexity for the restreamer, video based restreaming has several disadvantages:</p>
		<ul>
			<li>The restreamer is reading the raw video streams of players, requiring a high input bandwidth.</li>
			<li>Twitch video streams for the players typically do not have the same delivery lag, so even though players start games at the same time (done via the use of the Twitch chat count-down), the lag makes the start of the game appears like one player starts before the other.</li>
			<li>The visual result is not consistent. Both players use whatever capture device they have, and the quality of the resulting videos, and the colors, are obvioulsy not matching in any restreamer's setup.</li>
			<li>There's no comparative stats. For their commentary, restreamers need to compute in their heads some stats and score differentials, and estimate the lead in terms of number of tetrises.</li>
		</ul>

		<h3>Trade-Offs</h3>
		<p>Unlike classical restreaming, which puts a higher burden of work on the restreamer than on the players, NestrisChamps puts the bulk of the work squarely onto players. Players are the ones who need to spend the effort to setup and calibrate properly. As mentioned above, doing so is meant to be worthwhile for them individually, so they may benefit from the features and tracking NestrisChamps offers.</p> 
		<p>For a restreamer to host 2 players who have <strong>already</strong> setup NestrisChamps for capture, using NestrisChamps is dead easy. The Game host sets up the competition layout renderer in their OBS, and once players connect to the game host's room, their gameplay and comparative stats would "just work".</p>
		<p>Doing that specifically addresses the issues with classical restreaming:</p>
		<ul>
			<li>Players send data streams, not video streams. That requires very little bandwidth (in the order of 4KB/s or less).</li>
			<li>Data streams are real time, without Twitch as an intermediary video broadcaster. When both players start a game at the same time on count-down, the match in the game host's stream will show both players starting at the same time.</li>
			<li>The renderer draws players' fields in exactly the same way. Perfect alignment and matching colors for a consistent render in crisp HD.</li>
			<li>The comparative stats just work out of the box. The game host can chose amongst a variety of layouts with more or less stats, to their taste.</li>
		</ul>
		<p>Additionally, classical restreamers need to slice the player video feed from the stencil area. That, or they may require a separate video feed with something else like <a href="https://vdo.ninja/">vdo.ninja</a>. Doing that requires coordination between the game host and the players, and the game host must set up the video ares correctly in their OBS setup. Not so with NestrisChamps. Since NestrisChamps capture player cams natively, the video stream is already positionned in the layout with zero effort from the game host.</p>

		<h3>Maturity of the technology</h3>
		<p>NestrisChamps works with data. Accurate score differential can only be achieved if the data streams of both players are clean and correct.</p>
		<p>Sadly, not all video capture devices are equal, and players use whatever they have. Video capture and processing software are both mature technologies. OBS can handle pretty much any video input device. For a restreamer, that means the final look of the stream may not be consistent, and may not have comparative stats, but it's unlikely to "not work", or display invalid data.</p>
		<p>NestrisChamps on the other hand needs to do more than just capture the video input. It needs to process it, and understand what is in it. This makes it dependent on the quality of the capture itself. Some video capture devices just cannot output a clear or bright enough video stream, which makes it impossible to get clean data from it (causing much frustration to the player who is trying to calibrate).</p>
		<p>Still, this is the trade off NestrisChamps makes. If you want to use NestrisChamps' features for yourself, then eventually make sure you have a good capture setup.</p>

		<h3>Good Capture Setup</h3>
		<p>One major problem with analogue AV and video capture devices is power loss. The NES video output is meant to be consumed by the TV, where it'll display a clear image.</p>
		<p>When doing AV capture with a simple <a href="https://www.amazon.com/Splitter-Female-Adapter-Composite-Output/dp/B09226KT7G">AV Y-splitter cable</a>, the video output power is split between the TV and the capture device, making them both receive a much darker image than intended. This is not too big of a problem for raw capture, and OBS provides some filter to brighten the image again. Not so for NestrisChamps (so far anyway). Because of that, depending on the NES output, and the quality of the capture device, the input is sometimes just too dark for NestrisChamps to use, and it is impossible to produce a clean data stream from it.</p>
		<p>There are several ways to work around that. One might be to use the <a href="https://www.nintendo.com/consumer/systems/nes/hook_rftotv_nes.jsp">NES RF output</a> for the TV, and the AV output for the capture device only. Doing that ensures that the AV signal's is not split and there's no power loss.</p>
		<p>Another method might be to use a <a href="https://www.amazon.com/gp/product/B00CAIBQ9E">powered splitter</a>, with which the NES video output is amplified to be delivered in full to both the TV and the video capture device. In both cases, since the signal received by the capture device will be of good quality (i.e. not too dark), NestrisChamps will have an easier time processing it.</p>

		<h3>Future improvements</h3>
		<p>One might say that if NestrisChamps "competes" with systems for which the quality of the output signal is not an issue, then it is on NestrisChamps' court to make itself work in the same conditions. That's a fair criticism.</p>
		<p>And That may happen! NestrisChamps is open source, and used actively by a number of people, some of whom are very technical. It is possible that eventually NestrisChamps will have an "magical" capture calibration wizard, and a way to work on low quality input, with some image correction and smart detection. Sadly there's no ETA for those. NestrisChamps is still the work of one person (me!), and NestrisChamps works great for me, so while I try to address issues and make NestrisChamps more robust, it takes time to make progress, time I have unfortunately rather little of. Because of that, for the moment NestrisChamps is a tool that requires users to spend an initial effort to setup. But once you get past that initial time/effort investment, using NestrisChamps is very easy, and supporting competitions is a nice bonus that would just work.</p>
	</div>
</section>

<script>
(function init() {
	const logo = document.querySelector('.logo');
	const img = document.createElement('img');
	const trophy_num = 1 + Math.floor(Math.random() * 20);

	img.title = 'NestrisChamps logo trophy';
	img.src = `/brand/trophies/${trophy_num}.e.6x.png`;

	logo.prepend(img);
})();
</script>
</body>
</html>
